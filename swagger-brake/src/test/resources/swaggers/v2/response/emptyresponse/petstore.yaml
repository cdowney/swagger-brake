---
swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about\
    \ Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\
    \  For this sample, you can use the api key `special-key` to test the authorization\
    \ filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "pet"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "store"
    description: "Access to Petstore orders"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /store/order/{orderId}:
    get:
      tags:
        - "store"
      summary: "Find purchase order by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 10.\
        \ Other values will generated exceptions"
      operationId: "getOrderById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        -  "$ref": "#/parameters/orderId"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        202:
          description: "successful operation"
          schema:
            $ref: "#/responses/AnotherOrder"
        204:
          $ref: "#/responses/successNoResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"

responses:
  successNoResponse:
    #see https://swagger.io/docs/specification/describing-responses/  - Empty Response Body section
    description: "204 - The request was successful. No response body will be returned."
  AnotherOrder:
    description: "something"
    schema:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"

parameters:
  orderId:
    name: "orderId"
    in: "path"
    description: "ID of pet that needs to be fetched"
    required: true
    type: "integer"
    maximum: 10.0
    minimum: 1.0
    format: "int64"

definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "placed"
          - "approved"
          - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"